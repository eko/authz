name: Backend

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  backend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: backend
          args: --timeout 5m

  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Run Go tests
        run: |
          cd backend
          go test -race -count=1 -v ./...

  backend-functional-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./docker-compose.postgres.yaml"

      - name: Install json-to-messages
        run: npm install -g @cucumber/json-to-messages
      - name: Install Godog binary
        run: go install github.com/cucumber/godog/cmd/godog@v0.12.5

      - name: Run Godog tests
        id: tests
        env:
          CUCUMBER_PUBLISH_TOKEN: '${{ secrets.CUCUMBER_PUBLISH_TOKEN }}'
        run: |
          cd backend
          go test -count=1 --tags=functional -v ./functional --godog.format=cucumber | grep -v -E "^(ok|FAIL)" | json-to-messages > messages.json
          OUTPUT=$(curl -s -D - -H "Authorization: Bearer $CUCUMBER_PUBLISH_TOKEN" "https://messages.cucumber.io/api/reports")
          TARGET=$(echo $OUTPUT | grep -Eo 'https://cucumber-messages-app[^ ]+' | tr -d '\r')
          curl -v --upload-file messages.json "$TARGET"
          REPORT_LINK=$(echo $OUTPUT | grep -Eo 'https://reports.cucumber.io/reports/[0-9a-z-]+' | tr -d '\r')
          echo "::set-output name=REPORT_LINK::$REPORT_LINK"

      - uses: mshick/add-pr-comment@v1
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            Cucumber reports available here:
            ${{ steps.tests.outputs.REPORT_LINK }}
          allow-repeats: true

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Run tests
        run: |
          cd frontend
          npm install --force
          npm run test

  sdk-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: sdk

  sdk-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Run Go tests
        run: |
          cd sdk
          go test -race -count=1 -v ./...
