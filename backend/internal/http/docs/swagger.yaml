definitions:
  handler.CheckQuery:
    properties:
      action:
        type: string
      principal:
        type: string
      resource_kind:
        type: string
      resource_value:
        type: string
      result:
        type: string
    required:
    - action
    - principal
    - resource_kind
    - resource_value
    type: object
  handler.CheckRequest:
    properties:
      checks:
        items:
          $ref: '#/definitions/handler.CheckQuery'
        type: array
    required:
    - checks
    type: object
  handler.CheckResponse:
    properties:
      checks:
        items:
          $ref: '#/definitions/handler.CheckQuery'
        type: array
    type: object
  handler.CreatePolicyRequest:
    properties:
      actions:
        items:
          type: string
        type: array
      id:
        type: string
      resources:
        items:
          type: string
        type: array
    required:
    - actions
    - id
    - resources
    type: object
  handler.CreatePrincipalRequest:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      roles:
        items:
          type: string
        type: array
    required:
    - id
    type: object
  handler.CreateResourceRequest:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      kind:
        type: string
      value:
        type: string
    required:
    - id
    - kind
    type: object
  handler.CreateRoleRequest:
    properties:
      id:
        type: string
      policies:
        items:
          type: string
        type: array
    required:
    - id
    - policies
    type: object
  handler.UpdatePolicyRequest:
    properties:
      actions:
        items:
          type: string
        type: array
      resources:
        items:
          type: string
        type: array
    required:
    - actions
    - resources
    type: object
  handler.UpdatePrincipalRequest:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      roles:
        items:
          type: string
        type: array
    type: object
  handler.UpdateRoleRequest:
    properties:
      policies:
        items:
          type: string
        type: array
    required:
    - policies
    type: object
  model.Action:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_locked:
        type: boolean
      updated_at:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: boolean
      message:
        type: string
      validation:
        items:
          $ref: '#/definitions/model.ValidateErrorResponse'
        type: array
    type: object
  model.Policy:
    properties:
      actions:
        items:
          $ref: '#/definitions/model.Action'
        type: array
      attribute_rules:
        items:
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      resources:
        items:
          $ref: '#/definitions/model.Resource'
        type: array
      updated_at:
        type: string
    type: object
  model.Principal:
    properties:
      attributes:
        type: object
      created_at:
        type: string
      id:
        type: string
      is_locked:
        type: boolean
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      updated_at:
        type: string
    type: object
  model.Resource:
    properties:
      attributes:
        type: object
      created_at:
        type: string
      id:
        type: string
      is_locked:
        type: boolean
      kind:
        type: string
      updated_at:
        type: string
      value:
        type: string
    type: object
  model.Role:
    properties:
      created_at:
        type: string
      id:
        type: string
      policies:
        items:
          $ref: '#/definitions/model.Policy'
        type: array
      updated_at:
        type: string
    type: object
  model.ValidateErrorResponse:
    properties:
      field:
        type: string
      tag:
        type: string
      value:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/actions:
    get:
      parameters:
      - description: page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 100
        description: page size
        in: query
        maximum: 1000
        minimum: 1
        name: size
        type: integer
      - description: filter on a field
        example: name:contains:something
        in: query
        name: filter
        type: string
      - description: sort field and order
        example: name:desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Action'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Lists actions
      tags:
      - Authz
  /v1/actions/{identifier}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Action'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Retrieve an action
      tags:
      - Authz
  /v1/policies:
    get:
      parameters:
      - description: page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 100
        description: page size
        in: query
        maximum: 1000
        minimum: 1
        name: size
        type: integer
      - description: filter on a field
        example: kind:contains:something
        in: query
        name: filter
        type: string
      - description: sort field and order
        example: kind:desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Policy'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Lists policies
      tags:
      - Authz
    post:
      parameters:
      - description: Policy creation request
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/handler.CreatePolicyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Policy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Creates a new policy
      tags:
      - Authz
  /v1/policies/{identifier}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Policy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Deletes a policy
      tags:
      - Authz
    put:
      parameters:
      - description: Policy update request
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/handler.UpdatePolicyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Policy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Updates a policy
      tags:
      - Authz
  /v1/principals:
    get:
      parameters:
      - description: page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 100
        description: page size
        in: query
        maximum: 1000
        minimum: 1
        name: size
        type: integer
      - description: filter on a field
        example: name:contains:something
        in: query
        name: filter
        type: string
      - description: sort field and order
        example: name:desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Principal'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Lists principals
      tags:
      - Authz
    post:
      parameters:
      - description: Principal creation request
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/handler.CreatePrincipalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Principal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Creates a new principal
      tags:
      - Authz
  /v1/principals/{identifier}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Principal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Deletes a principal
      tags:
      - Authz
    put:
      parameters:
      - description: Principal update request
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/handler.UpdatePrincipalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Principal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Updates a principal
      tags:
      - Authz
  /v1/resources:
    get:
      parameters:
      - description: page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 100
        description: page size
        in: query
        maximum: 1000
        minimum: 1
        name: size
        type: integer
      - description: filter on a field
        example: kind:contains:something
        in: query
        name: filter
        type: string
      - description: sort field and order
        example: kind:desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Resource'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Lists resources
      tags:
      - Authz
    post:
      parameters:
      - description: Resource creation request
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/handler.CreateResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Resource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Creates a new resource
      tags:
      - Authz
  /v1/resources/{identifier}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Resource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Deletes a resource
      tags:
      - Authz
  /v1/roles:
    get:
      parameters:
      - description: page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 100
        description: page size
        in: query
        maximum: 1000
        minimum: 1
        name: size
        type: integer
      - description: filter on a field
        example: kind:contains:something
        in: query
        name: filter
        type: string
      - description: sort field and order
        example: kind:desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Lists roles
      tags:
      - Authz
    post:
      parameters:
      - description: Role creation request
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/handler.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Creates a new role
      tags:
      - Authz
  /v1/roles/{identifier}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Deletes a role
      tags:
      - Authz
    put:
      parameters:
      - description: Role update request
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - Authentication: []
      summary: Updates a role
      tags:
      - Authz
swagger: "2.0"
