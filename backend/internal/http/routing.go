package http

import (
	"strings"

	"github.com/gofiber/swagger"

	// docs are generated by Swag CLI, you have to import them.
	// replace with your own docs folder, usually "github.com/username/reponame/docs"
	_ "github.com/eko/authz/backend/internal/http/docs"
	"github.com/eko/authz/backend/internal/http/handler"

	"github.com/gofiber/fiber/v2/middleware/cors"
)

// Is to define the swagger route and the dynamic swagger routes
func (s *Server) setSwagger() {
	s.app.Get("/swagger/*", swagger.HandlerDefault)
}

// @title						Authz API
// @version					1.0
// @description				Authorization management HTTP APIs
// @securitydefinitions.apikey	Authentication
// @in							header
// @name						Authorization
// @BasePath					/v1
func (s *Server) setRoutes() {
	s.app.Use(
		cors.New(cors.Config{
			AllowOrigins:     strings.Join(s.cfg.CORSAllowedDomains, ","),
			AllowMethods:     strings.Join(s.cfg.CORSAllowedMethods, ","),
			AllowHeaders:     strings.Join(s.cfg.CORSAllowedHeaders, ","),
			AllowCredentials: s.cfg.CORSAllowCredentials,
			MaxAge:           int(s.cfg.CORSCacheMaxAge.Seconds()),
		}),
	)

	base := s.app.Group("/v1")
	{
		actions := base.Group("/actions")
		actions.Post("", s.handlers.Get(handler.ActionCreateKey))
		actions.Get("", s.handlers.Get(handler.ActionListKey))
		actions.Get("/:identifier", s.handlers.Get(handler.ActionGetKey))
		actions.Delete("/:identifier", s.handlers.Get(handler.ActionDeleteKey))
		actions.Put("/:identifier", s.handlers.Get(handler.ActionUpdateKey))

		policies := base.Group("/policies")
		policies.Post("", s.handlers.Get(handler.PolicyCreateKey))
		policies.Get("", s.handlers.Get(handler.PolicyListKey))
		policies.Get("/:identifier", s.handlers.Get(handler.PolicyGetKey))
		policies.Delete("/:identifier", s.handlers.Get(handler.PolicyDeleteKey))
		policies.Put("/:identifier", s.handlers.Get(handler.PolicyUpdateKey))

		resources := base.Group("/resources")
		resources.Post("", s.handlers.Get(handler.ResourceCreateKey))
		resources.Get("", s.handlers.Get(handler.ResourceListKey))
		resources.Get("/:identifier", s.handlers.Get(handler.ResourceGetKey))
		resources.Delete("/:identifier", s.handlers.Get(handler.ResourceDeleteKey))
		resources.Put("/:identifier", s.handlers.Get(handler.ResourceUpdateKey))

		subjects := base.Group("/subjects")
		subjects.Post("", s.handlers.Get(handler.SubjectCreateKey))
		subjects.Get("", s.handlers.Get(handler.SubjectListKey))
		subjects.Get("/:identifier", s.handlers.Get(handler.SubjectGetKey))
		subjects.Delete("/:identifier", s.handlers.Get(handler.SubjectDeleteKey))
		subjects.Put("/:identifier", s.handlers.Get(handler.SubjectUpdateKey))
	}
}
